apiVersion: apps/v1
kind: Deployment
metadata:
  name: fraud-detection-deployment
spec:
  selector:
    matchLabels:
      app: fraud-detection-k8s
  replicas: 2
  template:
    metadata:
      labels:
        app: fraud-detection-k8s
    spec:
      containers:
        - name: fraud-detection-k8s
          image: fraud-service
          imagePullPolicy: Never
          ports:
            - containerPort: 8081
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config
                  key :  fraud-host

            - name: DB_NAME  # Setting Database name from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config
                  key :  fraud-dbName

            - name: DB_USERNAME  # Setting Database username from Secret
              valueFrom :
                secretKeyRef :
                  name : mysql-secrets
                  key :  username

            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom :
                secretKeyRef :
                  name : mysql-secrets
                  key :  password
            - name: MY_POD_NAME # POD NAME
              valueFrom :
                fieldRef :
                  fieldPath : metadata.name

---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes' resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: fraud-service
spec:
  selector:
    app: fraud-detection-k8s
  ports:
    - protocol: "TCP"
      port: 8081 # The port that the service is running on in the cluster
      targetPort: 8081 # The port exposed by the service
      nodePort: 30002
  type: NodePort # type of the service.

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loan-deployment
spec:
  selector:
    matchLabels:
      app: loan-k8s
  replicas: 2
  template:
    metadata:
      labels:
        app: loan-k8s
    spec:
      containers:
        - name: loan-k8s
          image: loan-service
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config
                  key :  loan-host

            - name: DB_NAME  # Setting Database name from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config
                  key :  loan-dbName

            - name: DB_USERNAME  # Setting Database username from Secret
              valueFrom :
                secretKeyRef :
                  name : mysql-secrets
                  key :  username

            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom :
                secretKeyRef :
                  name : mysql-secrets
                  key :  password
            - name: MY_POD_NAME # POD NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes' resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: loan-service
spec:
  selector:
    app: loan-k8s
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
      nodePort: 30001
  type: NodePort # type of the service.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alert-node
spec:
  selector:
    matchLabels:
      app: alert-node
  replicas: 1
  template:
    metadata:
      labels:
        app: alert-node
    spec:
      containers:
        - name: alert-node
          image: alert-node
          imagePullPolicy: Never
          ports:
            - containerPort: 7777
---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes' resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: event-collector # domain name
spec:
  selector:
    app: alert-node
  ports:
    - protocol: "TCP"
      port: 7777 # The port that the service is running on in the cluster
      targetPort: 7777 # The port exposed by the service
      nodePort: 30003
  type: NodePort # type of the service.